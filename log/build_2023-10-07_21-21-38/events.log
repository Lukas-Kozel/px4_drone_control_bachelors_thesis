[0.000000] (-) TimerEvent: {}
[0.001680] (-) JobUnselected: {'identifier': 'controller_prototype'}
[0.002083] (-) JobUnselected: {'identifier': 'gps_converter'}
[0.002116] (-) JobUnselected: {'identifier': 'libmavconn'}
[0.002141] (-) JobUnselected: {'identifier': 'load_imu_subscriber'}
[0.002163] (-) JobUnselected: {'identifier': 'mavros'}
[0.002183] (-) JobUnselected: {'identifier': 'mavros_extras'}
[0.002206] (-) JobUnselected: {'identifier': 'mavros_msgs'}
[0.002228] (-) JobUnselected: {'identifier': 'move_forward'}
[0.002248] (-) JobUnselected: {'identifier': 'pid_prototype'}
[0.002485] (-) JobUnselected: {'identifier': 'px4_msgs'}
[0.002582] (angle_calculator) JobQueued: {'identifier': 'angle_calculator', 'dependencies': OrderedDict()}
[0.002791] (angle_calculator) JobStarted: {'identifier': 'angle_calculator'}
[0.099722] (-) TimerEvent: {}
[0.138295] (angle_calculator) JobProgress: {'identifier': 'angle_calculator', 'progress': 'cmake'}
[0.138492] (angle_calculator) Command: {'cmd': ['/home/luky/.local/bin/cmake', '/home/luky/mavros_ros2_ws/src/angle_calculator', '-DCMAKE_INSTALL_PREFIX=/home/luky/mavros_ros2_ws/src/install/angle_calculator'], 'cwd': '/home/luky/mavros_ros2_ws/src/build/angle_calculator', 'env': OrderedDict([('GITHUB_TOKEN', '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'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_US:en'), ('USER', 'luky'), ('LC_TIME', 'cs_CZ.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/luky/mavros_ros2_ws/install/px4_msgs/lib:/home/luky/mavros_ros2_ws/install/mavros_extras/lib:/home/luky/mavros_ros2_ws/install/mavros/lib:/home/luky/mavros_ros2_ws/install/mavros_msgs/lib:/home/luky/mavros_ros2_ws/install/libmavconn/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/luky'), ('CONDA_SHLVL', '0'), ('OLDPWD', '/home/luky/mavros_ros2_ws/src/angle_calculator'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'cs_CZ.UTF-8'), ('SYSTEMD_EXEC_PID', '2236'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1001/bus'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/luky/mavros_ros2_ws/install:/home/luky/ros2_ws/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'luky'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'luky'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', ':/home/luky/px4-SITL/PX4-Autopilot/Tools/simulation/gz/models'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/home/luky/miniconda3/condabin:/opt/gcc-arm-none-eabi-9-2020-q2-update/bin:/home/luky/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/laptop:@/tmp/.ICE-unix/2081,unix/laptop:/tmp/.ICE-unix/2081'), ('PAPERSIZE', 'a4'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'cs_CZ.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/80735eb4_e23d_4368_9c74_d703fff0fc59'), ('XDG_RUNTIME_DIR', '/run/user/1001'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'cs_CZ.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1001/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.113'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1001/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/luky/mavros_ros2_ws/install/move_forward:/home/luky/mavros_ros2_ws/install/px4_msgs:/home/luky/mavros_ros2_ws/install/pid_prototype:/home/luky/mavros_ros2_ws/install/mavros_extras:/home/luky/mavros_ros2_ws/install/mavros:/home/luky/mavros_ros2_ws/install/mavros_msgs:/home/luky/mavros_ros2_ws/install/load_imu_subscriber:/home/luky/mavros_ros2_ws/install/libmavconn:/home/luky/mavros_ros2_ws/install/gps_converter:/home/luky/mavros_ros2_ws/install/controller_prototype:/home/luky/mavros_ros2_ws/install/angle_calculator:/home/luky/ros2_ws/install/my_robot_controller:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/luky/miniconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'cs_CZ.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'cs_CZ.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1001/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'cs_CZ.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/luky/mavros_ros2_ws/src/build/angle_calculator'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/luky/miniconda3/bin/conda'), ('GAZEBO_PLUGIN_PATH', '/usr/include/gz/sim7/ignition/gazebo.hh:/home/luky/Desktop/backup/gz_pose_plugin:/usr/lib/x68_64-linux-gnu/gz-sim-7/plugins'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/luky/mavros_ros2_ws/install/px4_msgs/local/lib/python3.10/dist-packages:/home/luky/mavros_ros2_ws/install/mavros/local/lib/python3.10/dist-packages:/home/luky/mavros_ros2_ws/install/mavros_msgs/local/lib/python3.10/dist-packages:/home/luky/ros2_ws/build/my_robot_controller:/home/luky/ros2_ws/install/my_robot_controller/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'cs_CZ.UTF-8'), ('LC_PAPER', 'cs_CZ.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/luky/mavros_ros2_ws/install/move_forward:/home/luky/mavros_ros2_ws/install/px4_msgs:/home/luky/mavros_ros2_ws/install/pid_prototype:/home/luky/mavros_ros2_ws/install/mavros_extras:/home/luky/mavros_ros2_ws/install/mavros:/home/luky/mavros_ros2_ws/install/mavros_msgs:/home/luky/mavros_ros2_ws/install/load_imu_subscriber:/home/luky/mavros_ros2_ws/install/libmavconn:/home/luky/mavros_ros2_ws/install/gps_converter:/home/luky/mavros_ros2_ws/install/controller_prototype:/home/luky/mavros_ros2_ws/install/angle_calculator:/home/luky/ros2_ws/install/my_robot_controller:/opt/ros/humble')]), 'shell': False}
[0.199882] (-) TimerEvent: {}
[0.227401] (angle_calculator) StdoutLine: {'line': b'-- The C compiler identification is GNU 11.4.0\n'}
[0.296440] (angle_calculator) StdoutLine: {'line': b'-- The CXX compiler identification is GNU 11.4.0\n'}
[0.300173] (-) TimerEvent: {}
[0.309391] (angle_calculator) StdoutLine: {'line': b'-- Detecting C compiler ABI info\n'}
[0.372547] (angle_calculator) StdoutLine: {'line': b'-- Detecting C compiler ABI info - done\n'}
[0.383029] (angle_calculator) StdoutLine: {'line': b'-- Check for working C compiler: /usr/bin/cc - skipped\n'}
[0.383324] (angle_calculator) StdoutLine: {'line': b'-- Detecting C compile features\n'}
[0.383839] (angle_calculator) StdoutLine: {'line': b'-- Detecting C compile features - done\n'}
[0.387608] (angle_calculator) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info\n'}
[0.400209] (-) TimerEvent: {}
[0.463143] (angle_calculator) StdoutLine: {'line': b'-- Detecting CXX compiler ABI info - done\n'}
[0.476501] (angle_calculator) StdoutLine: {'line': b'-- Check for working CXX compiler: /usr/bin/c++ - skipped\n'}
[0.476714] (angle_calculator) StdoutLine: {'line': b'-- Detecting CXX compile features\n'}
[0.476787] (angle_calculator) StdoutLine: {'line': b'-- Detecting CXX compile features - done\n'}
[0.479151] (angle_calculator) StdoutLine: {'line': b'-- Found ament_cmake: 1.3.5 (/opt/ros/humble/share/ament_cmake/cmake)\n'}
[0.501369] (-) TimerEvent: {}
[0.601890] (-) TimerEvent: {}
[0.702486] (-) TimerEvent: {}
[0.802961] (-) TimerEvent: {}
[0.903237] (-) TimerEvent: {}
[1.003509] (-) TimerEvent: {}
[1.103768] (-) TimerEvent: {}
[1.173445] (angle_calculator) StdoutLine: {'line': b'-- Found Python3: /usr/bin/python3.10 (found version "3.10.12") found components: Interpreter \n'}
[1.203984] (-) TimerEvent: {}
[1.301646] (angle_calculator) StdoutLine: {'line': b'-- Found rclcpp: 16.0.6 (/opt/ros/humble/share/rclcpp/cmake)\n'}
[1.304059] (-) TimerEvent: {}
[1.370473] (angle_calculator) StdoutLine: {'line': b'-- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)\n'}
[1.377588] (angle_calculator) StdoutLine: {'line': b'-- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)\n'}
[1.388668] (angle_calculator) StdoutLine: {'line': b'-- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)\n'}
[1.404167] (-) TimerEvent: {}
[1.406055] (angle_calculator) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c\n'}
[1.429653] (angle_calculator) StdoutLine: {'line': b'-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp\n'}
[1.505117] (-) TimerEvent: {}
[1.523429] (angle_calculator) StdoutLine: {'line': b'-- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)\n'}
[1.526776] (angle_calculator) StdoutLine: {'line': b'-- Found rmw_fastrtps_cpp: 6.2.4 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)\n'}
[1.605215] (-) TimerEvent: {}
[1.659280] (angle_calculator) StdoutLine: {'line': b'-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "3.0.2")  \n'}
[1.694732] (angle_calculator) StdoutLine: {'line': b'-- Found FastRTPS: /opt/ros/humble/include  \n'}
[1.705351] (-) TimerEvent: {}
[1.754612] (angle_calculator) StdoutLine: {'line': b"-- Using RMW implementation 'rmw_fastrtps_cpp' as default\n"}
[1.770448] (angle_calculator) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n'}
[1.805674] (-) TimerEvent: {}
[1.849239] (angle_calculator) StdoutLine: {'line': b'-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n'}
[1.851140] (angle_calculator) StdoutLine: {'line': b'-- Found Threads: TRUE  \n'}
[1.905727] (-) TimerEvent: {}
[2.006200] (-) TimerEvent: {}
[2.037789] (angle_calculator) StdoutLine: {'line': b'-- Found geometry_msgs: 4.2.3 (/opt/ros/humble/share/geometry_msgs/cmake)\n'}
[2.098250] (angle_calculator) StdoutLine: {'line': b'-- Found tf2: 0.25.4 (/opt/ros/humble/share/tf2/cmake)\n'}
[2.106295] (-) TimerEvent: {}
[2.116184] (angle_calculator) StdoutLine: {'line': b'-- Found tf2_geometry_msgs: 0.25.4 (/opt/ros/humble/share/tf2_geometry_msgs/cmake)\n'}
[2.136469] (angle_calculator) StdoutLine: {'line': b'-- Found eigen3_cmake_module: 0.1.1 (/opt/ros/humble/share/eigen3_cmake_module/cmake)\n'}
[2.138298] (angle_calculator) StdoutLine: {'line': b'-- Found Eigen3: TRUE (found version "3.4.0") \n'}
[2.138476] (angle_calculator) StdoutLine: {'line': b'-- Ensuring Eigen3 include directory is part of orocos-kdl CMake target\n'}
[2.206400] (-) TimerEvent: {}
[2.306664] (-) TimerEvent: {}
[2.407193] (-) TimerEvent: {}
[2.509007] (-) TimerEvent: {}
[2.559697] (angle_calculator) StdoutLine: {'line': b'-- Found ament_lint_auto: 0.12.8 (/opt/ros/humble/share/ament_lint_auto/cmake)\n'}
[2.609117] (-) TimerEvent: {}
[2.661544] (angle_calculator) StdoutLine: {'line': b"-- Added test 'cppcheck' to perform static code analysis on C / C++ code\n"}
[2.661736] (angle_calculator) StdoutLine: {'line': b'-- Configured cppcheck include dirs: \n'}
[2.661792] (angle_calculator) StdoutLine: {'line': b'-- Configured cppcheck exclude dirs and/or files: \n'}
[2.662753] (angle_calculator) StdoutLine: {'line': b"-- Added test 'flake8' to check Python code syntax and style conventions\n"}
[2.665743] (angle_calculator) StdoutLine: {'line': b"-- Added test 'lint_cmake' to check CMake code style\n"}
[2.666059] (angle_calculator) StdoutLine: {'line': b"-- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257\n"}
[2.668660] (angle_calculator) StdoutLine: {'line': b"-- Added test 'uncrustify' to check C / C++ code style\n"}
[2.668840] (angle_calculator) StdoutLine: {'line': b'-- Configured uncrustify additional arguments: \n'}
[2.670298] (angle_calculator) StdoutLine: {'line': b"-- Added test 'xmllint' to check XML markup files\n"}
[2.672070] (angle_calculator) StdoutLine: {'line': b'-- Configuring done (2.5s)\n'}
[2.687963] (angle_calculator) StdoutLine: {'line': b'-- Generating done (0.0s)\n'}
[2.690425] (angle_calculator) StdoutLine: {'line': b'-- Build files have been written to: /home/luky/mavros_ros2_ws/src/build/angle_calculator\n'}
[2.709341] (-) TimerEvent: {}
[2.718501] (angle_calculator) CommandEnded: {'returncode': 0}
[2.719677] (angle_calculator) JobProgress: {'identifier': 'angle_calculator', 'progress': 'build'}
[2.720518] (angle_calculator) Command: {'cmd': ['/home/luky/.local/bin/cmake', '--build', '/home/luky/mavros_ros2_ws/src/build/angle_calculator', '--', '-j8', '-l8'], 'cwd': '/home/luky/mavros_ros2_ws/src/build/angle_calculator', 'env': OrderedDict([('GITHUB_TOKEN', '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'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('LANGUAGE', 'en_US:en'), ('USER', 'luky'), ('LC_TIME', 'cs_CZ.UTF-8'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/luky/mavros_ros2_ws/install/px4_msgs/lib:/home/luky/mavros_ros2_ws/install/mavros_extras/lib:/home/luky/mavros_ros2_ws/install/mavros/lib:/home/luky/mavros_ros2_ws/install/mavros_msgs/lib:/home/luky/mavros_ros2_ws/install/libmavconn/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/luky'), ('CONDA_SHLVL', '0'), ('OLDPWD', '/home/luky/mavros_ros2_ws/src/angle_calculator'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('LC_MONETARY', 'cs_CZ.UTF-8'), ('SYSTEMD_EXEC_PID', '2236'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1001/bus'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('COLCON_PREFIX_PATH', '/home/luky/mavros_ros2_ws/install:/home/luky/ros2_ws/install'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'luky'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'luky'), ('TERM', 'xterm-256color'), ('GAZEBO_MODEL_PATH', ':/home/luky/px4-SITL/PX4-Autopilot/Tools/simulation/gz/models'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/home/luky/miniconda3/condabin:/opt/gcc-arm-none-eabi-9-2020-q2-update/bin:/home/luky/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/laptop:@/tmp/.ICE-unix/2081,unix/laptop:/tmp/.ICE-unix/2081'), ('PAPERSIZE', 'a4'), ('XDG_MENU_PREFIX', 'gnome-'), ('LC_ADDRESS', 'cs_CZ.UTF-8'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/80735eb4_e23d_4368_9c74_d703fff0fc59'), ('XDG_RUNTIME_DIR', '/run/user/1001'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('LC_TELEPHONE', 'cs_CZ.UTF-8'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1001/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.113'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1001/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/luky/mavros_ros2_ws/install/move_forward:/home/luky/mavros_ros2_ws/install/px4_msgs:/home/luky/mavros_ros2_ws/install/pid_prototype:/home/luky/mavros_ros2_ws/install/mavros_extras:/home/luky/mavros_ros2_ws/install/mavros:/home/luky/mavros_ros2_ws/install/mavros_msgs:/home/luky/mavros_ros2_ws/install/load_imu_subscriber:/home/luky/mavros_ros2_ws/install/libmavconn:/home/luky/mavros_ros2_ws/install/gps_converter:/home/luky/mavros_ros2_ws/install/controller_prototype:/home/luky/mavros_ros2_ws/install/angle_calculator:/home/luky/ros2_ws/install/my_robot_controller:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/luky/miniconda3/bin/python'), ('SHELL', '/bin/bash'), ('LC_NAME', 'cs_CZ.UTF-8'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'cs_CZ.UTF-8'), ('GPG_AGENT_INFO', '/run/user/1001/gnupg/S.gpg-agent:0:1'), ('LC_IDENTIFICATION', 'cs_CZ.UTF-8'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/luky/mavros_ros2_ws/src/build/angle_calculator'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/luky/miniconda3/bin/conda'), ('GAZEBO_PLUGIN_PATH', '/usr/include/gz/sim7/ignition/gazebo.hh:/home/luky/Desktop/backup/gz_pose_plugin:/usr/lib/x68_64-linux-gnu/gz-sim-7/plugins'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/luky/mavros_ros2_ws/install/px4_msgs/local/lib/python3.10/dist-packages:/home/luky/mavros_ros2_ws/install/mavros/local/lib/python3.10/dist-packages:/home/luky/mavros_ros2_ws/install/mavros_msgs/local/lib/python3.10/dist-packages:/home/luky/ros2_ws/build/my_robot_controller:/home/luky/ros2_ws/install/my_robot_controller/lib/python3.10/site-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'cs_CZ.UTF-8'), ('LC_PAPER', 'cs_CZ.UTF-8'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/luky/mavros_ros2_ws/install/move_forward:/home/luky/mavros_ros2_ws/install/px4_msgs:/home/luky/mavros_ros2_ws/install/pid_prototype:/home/luky/mavros_ros2_ws/install/mavros_extras:/home/luky/mavros_ros2_ws/install/mavros:/home/luky/mavros_ros2_ws/install/mavros_msgs:/home/luky/mavros_ros2_ws/install/load_imu_subscriber:/home/luky/mavros_ros2_ws/install/libmavconn:/home/luky/mavros_ros2_ws/install/gps_converter:/home/luky/mavros_ros2_ws/install/controller_prototype:/home/luky/mavros_ros2_ws/install/angle_calculator:/home/luky/ros2_ws/install/my_robot_controller:/opt/ros/humble')]), 'shell': False}
[2.786584] (angle_calculator) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/angle_calculator_node.dir/src/angle_calculator_node.cpp.o\x1b[0m\n'}
[2.809403] (-) TimerEvent: {}
[2.909753] (-) TimerEvent: {}
[3.010326] (-) TimerEvent: {}
[3.110668] (-) TimerEvent: {}
[3.210958] (-) TimerEvent: {}
[3.311244] (-) TimerEvent: {}
[3.411567] (-) TimerEvent: {}
[3.511908] (-) TimerEvent: {}
[3.612188] (-) TimerEvent: {}
[3.712550] (-) TimerEvent: {}
[3.813040] (-) TimerEvent: {}
[3.913442] (-) TimerEvent: {}
[4.013729] (-) TimerEvent: {}
[4.115214] (-) TimerEvent: {}
[4.215661] (-) TimerEvent: {}
[4.316542] (-) TimerEvent: {}
[4.417235] (-) TimerEvent: {}
[4.517727] (-) TimerEvent: {}
[4.618363] (-) TimerEvent: {}
[4.718834] (-) TimerEvent: {}
[4.819804] (-) TimerEvent: {}
[4.920331] (-) TimerEvent: {}
[5.020770] (-) TimerEvent: {}
[5.121438] (-) TimerEvent: {}
[5.221817] (-) TimerEvent: {}
[5.322318] (-) TimerEvent: {}
[5.422640] (-) TimerEvent: {}
[5.522994] (-) TimerEvent: {}
[5.623292] (-) TimerEvent: {}
[5.658553] (angle_calculator) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13\x1b[m\x1b[K,\n'}
[5.658793] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/algorithm:74\x1b[m\x1b[K,\n'}
[5.658853] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18\x1b[m\x1b[K,\n'}
[5.658896] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.658937] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.658979] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.659020] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:1\x1b[m\x1b[K:\n'}
[5.659062] (angle_calculator) StderrLine: {'line': b'/usr/include/c++/11/functional: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_check_arity<void (AngleCalculator::*)(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >), AngleCalculator*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.659108] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:768:12:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstruct std::_Bind_helper<false, void (AngleCalculator::*)(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >), AngleCalculator*, const std::_Placeholder<1>&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.659161] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:789:5:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (AngleCalculator::*)(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >); _BoundArgs = {AngleCalculator*, const std::_Placeholder<1>&}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.659211] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:13:40:\x1b[m\x1b[K   required from here\n'}
[5.659255] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kstatic assertion failed: Wrong number of arguments for pointer-to-member\n'}
[5.659316] (angle_calculator) StderrLine: {'line': b'  755 |       static_assert(_Varargs::\x1b[01;31m\x1b[Kvalue\x1b[m\x1b[K\n'}
[5.659360] (angle_calculator) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K~~~~~\x1b[m\x1b[K\n'}
[5.659400] (angle_calculator) StderrLine: {'line': b'  756 | \x1b[01;31m\x1b[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1\x1b[m\x1b[K\n'}
[5.659443] (angle_calculator) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.659488] (angle_calculator) StderrLine: {'line': b'  757 | \x1b[01;31m\x1b[K                    : sizeof...(_BoundArgs) == _Arity::value + 1\x1b[m\x1b[K,\n'}
[5.659531] (angle_calculator) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.659571] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/functional:756:21:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[K(false ? (2 >= (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)) : (2 == (((long unsigned int)std::integral_constant<long unsigned int, 2>::value) + 1)))\x1b[m\x1b[K\xe2\x80\x99 evaluates to false\n'}
[5.723404] (-) TimerEvent: {}
[5.823693] (-) TimerEvent: {}
[5.924097] (-) TimerEvent: {}
[6.024527] (-) TimerEvent: {}
[6.124779] (-) TimerEvent: {}
[6.142148] (angle_calculator) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[6.142596] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[6.142721] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[6.142794] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[6.142839] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[6.142881] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[6.142926] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[6.142971] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[6.143028] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[6.143071] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.143112] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:1\x1b[m\x1b[K:\n'}
[6.143153] (angle_calculator) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.143339] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.143392] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.143440] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.143499] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.143572] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:12:84:\x1b[m\x1b[K   required from here\n'}
[6.143654] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>::function(std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.143727] (angle_calculator) StderrLine: {'line': b'  394 |       callback_variant_ = \x1b[01;31m\x1b[Kstatic_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[6.143800] (angle_calculator) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.144363] (angle_calculator) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/future:47\x1b[m\x1b[K,\n'}
[6.144440] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[6.144481] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.144520] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:1\x1b[m\x1b[K:\n'}
[6.144559] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.144601] (angle_calculator) StderrLine: {'line': b'  435 |         \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(_Functor&& __f)\n'}
[6.144647] (angle_calculator) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.144685] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:435:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.144726] (angle_calculator) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[6.144766] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[6.144804] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:64\x1b[m\x1b[K,\n'}
[6.144843] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:63\x1b[m\x1b[K,\n'}
[6.144884] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.144923] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:1\x1b[m\x1b[K:\n'}
[6.144961] (angle_calculator) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.145001] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:353:8:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>::_Callable<std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>&, std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>, std::__invoke_result<std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>&, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > > > >; _Tp = void; _Res = void; _ArgTypes = {std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145048] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:434:9:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145093] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145138] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145193] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145240] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145285] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:12:84:\x1b[m\x1b[K   required from here\n'}
[6.145323] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2205:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145362] (angle_calculator) StderrLine: {'line': b' 2205 |     using \x1b[01;31m\x1b[K__enable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[6.145400] (angle_calculator) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.145442] (angle_calculator) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/future:47\x1b[m\x1b[K,\n'}
[6.145479] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18\x1b[m\x1b[K,\n'}
[6.145517] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[6.145556] (angle_calculator) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:1\x1b[m\x1b[K:\n'}
[6.145598] (angle_calculator) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.145646] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145705] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::Pose_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145757] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145844] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::Pose_<std::allocator<void> >; CallbackT = std::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::Pose_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::Pose_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.145929] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/home/luky/mavros_ros2_ws/src/angle_calculator/src/angle_calculator_node.cpp:12:84:\x1b[m\x1b[K   required from here\n'}
[6.146005] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.146081] (angle_calculator) StderrLine: {'line': b'  404 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(function&& __x) noexcept\n'}
[6.146151] (angle_calculator) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.146214] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:404:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.146293] (angle_calculator) StderrLine: {'line': b'  404 |       function(\x1b[01;36m\x1b[Kfunction&& __x\x1b[m\x1b[K) noexcept\n'}
[6.146368] (angle_calculator) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.146432] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.146508] (angle_calculator) StderrLine: {'line': b'  386 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(const function& __x)\n'}
[6.146572] (angle_calculator) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.146634] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:386:32:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::function<void(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.146712] (angle_calculator) StderrLine: {'line': b'  386 |       function(\x1b[01;36m\x1b[Kconst function& __x\x1b[m\x1b[K)\n'}
[6.146768] (angle_calculator) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.146828] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.146888] (angle_calculator) StderrLine: {'line': b'  375 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K(nullptr_t) noexcept\n'}
[6.146948] (angle_calculator) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.147000] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:375:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<void (AngleCalculator::*(AngleCalculator*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::nullptr_t\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.147058] (angle_calculator) StderrLine: {'line': b'  375 |       function(\x1b[01;36m\x1b[Knullptr_t\x1b[m\x1b[K) noexcept\n'}
[6.147099] (angle_calculator) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.147138] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >, std::shared_ptr<geometry_msgs::msg::Pose_<std::allocator<void> > >}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.147184] (angle_calculator) StderrLine: {'line': b'  368 |       \x1b[01;36m\x1b[Kfunction\x1b[m\x1b[K() noexcept\n'}
[6.147221] (angle_calculator) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.154005] (angle_calculator) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/std_function.h:368:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 0 arguments, 1 provided\n'}
[6.225049] (-) TimerEvent: {}
[6.325659] (-) TimerEvent: {}
[6.426043] (-) TimerEvent: {}
[6.526365] (-) TimerEvent: {}
[6.626751] (-) TimerEvent: {}
[6.727126] (-) TimerEvent: {}
[6.827507] (-) TimerEvent: {}
[6.927768] (-) TimerEvent: {}
[7.028098] (-) TimerEvent: {}
[7.128456] (-) TimerEvent: {}
[7.228800] (-) TimerEvent: {}
[7.329242] (-) TimerEvent: {}
[7.429908] (-) TimerEvent: {}
[7.530504] (-) TimerEvent: {}
[7.630856] (-) TimerEvent: {}
[7.731479] (-) TimerEvent: {}
[7.832308] (-) TimerEvent: {}
[7.932687] (-) TimerEvent: {}
[8.033162] (-) TimerEvent: {}
[8.133823] (-) TimerEvent: {}
[8.234396] (-) TimerEvent: {}
[8.334690] (-) TimerEvent: {}
[8.435110] (-) TimerEvent: {}
[8.494299] (angle_calculator) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/angle_calculator_node.dir/build.make:76: CMakeFiles/angle_calculator_node.dir/src/angle_calculator_node.cpp.o] Error 1\n'}
[8.494573] (angle_calculator) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/angle_calculator_node.dir/all] Error 2\n'}
[8.495099] (angle_calculator) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[8.501750] (angle_calculator) CommandEnded: {'returncode': 2}
[8.535173] (-) TimerEvent: {}
[8.614587] (angle_calculator) JobEnded: {'identifier': 'angle_calculator', 'rc': 2}
[8.625065] (-) EventReactorShutdown: {}
