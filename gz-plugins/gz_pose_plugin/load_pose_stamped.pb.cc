// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: load_pose_stamped.proto

#include "load_pose_stamped.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_load_5fpose_5fstamped_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LoadHeader_load_5fpose_5fstamped_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_load_5fpose_5fstamped_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadHeader_DataEntry_DoNotUse_load_5fpose_5fstamped_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_load_5fpose_5fstamped_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadHeader_LoadStamp_load_5fpose_5fstamped_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_load_5fpose_5fstamped_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LoadPose_load_5fpose_5fstamped_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_load_5fpose_5fstamped_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadPose_Orientation_load_5fpose_5fstamped_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_load_5fpose_5fstamped_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadPose_Position_load_5fpose_5fstamped_2eproto;
namespace gz_pose_plugin {
class LoadHeader_LoadStampDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadHeader_LoadStamp> _instance;
} _LoadHeader_LoadStamp_default_instance_;
class LoadHeader_DataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadHeader_DataEntry_DoNotUse> _instance;
} _LoadHeader_DataEntry_DoNotUse_default_instance_;
class LoadHeaderDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadHeader> _instance;
} _LoadHeader_default_instance_;
class LoadPose_PositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadPose_Position> _instance;
} _LoadPose_Position_default_instance_;
class LoadPose_OrientationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadPose_Orientation> _instance;
} _LoadPose_Orientation_default_instance_;
class LoadPoseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadPose> _instance;
} _LoadPose_default_instance_;
class LoadPoseStampedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadPoseStamped> _instance;
} _LoadPoseStamped_default_instance_;
}  // namespace gz_pose_plugin
static void InitDefaultsscc_info_LoadHeader_load_5fpose_5fstamped_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz_pose_plugin::_LoadHeader_default_instance_;
    new (ptr) ::gz_pose_plugin::LoadHeader();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz_pose_plugin::LoadHeader::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LoadHeader_load_5fpose_5fstamped_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_LoadHeader_load_5fpose_5fstamped_2eproto}, {
      &scc_info_LoadHeader_LoadStamp_load_5fpose_5fstamped_2eproto.base,
      &scc_info_LoadHeader_DataEntry_DoNotUse_load_5fpose_5fstamped_2eproto.base,}};

static void InitDefaultsscc_info_LoadHeader_DataEntry_DoNotUse_load_5fpose_5fstamped_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz_pose_plugin::_LoadHeader_DataEntry_DoNotUse_default_instance_;
    new (ptr) ::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse();
  }
  ::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadHeader_DataEntry_DoNotUse_load_5fpose_5fstamped_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadHeader_DataEntry_DoNotUse_load_5fpose_5fstamped_2eproto}, {}};

static void InitDefaultsscc_info_LoadHeader_LoadStamp_load_5fpose_5fstamped_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz_pose_plugin::_LoadHeader_LoadStamp_default_instance_;
    new (ptr) ::gz_pose_plugin::LoadHeader_LoadStamp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz_pose_plugin::LoadHeader_LoadStamp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadHeader_LoadStamp_load_5fpose_5fstamped_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadHeader_LoadStamp_load_5fpose_5fstamped_2eproto}, {}};

static void InitDefaultsscc_info_LoadPose_load_5fpose_5fstamped_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz_pose_plugin::_LoadPose_default_instance_;
    new (ptr) ::gz_pose_plugin::LoadPose();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz_pose_plugin::LoadPose::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LoadPose_load_5fpose_5fstamped_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_LoadPose_load_5fpose_5fstamped_2eproto}, {
      &scc_info_LoadPose_Position_load_5fpose_5fstamped_2eproto.base,
      &scc_info_LoadPose_Orientation_load_5fpose_5fstamped_2eproto.base,}};

static void InitDefaultsscc_info_LoadPose_Orientation_load_5fpose_5fstamped_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz_pose_plugin::_LoadPose_Orientation_default_instance_;
    new (ptr) ::gz_pose_plugin::LoadPose_Orientation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz_pose_plugin::LoadPose_Orientation::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadPose_Orientation_load_5fpose_5fstamped_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadPose_Orientation_load_5fpose_5fstamped_2eproto}, {}};

static void InitDefaultsscc_info_LoadPose_Position_load_5fpose_5fstamped_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz_pose_plugin::_LoadPose_Position_default_instance_;
    new (ptr) ::gz_pose_plugin::LoadPose_Position();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz_pose_plugin::LoadPose_Position::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadPose_Position_load_5fpose_5fstamped_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadPose_Position_load_5fpose_5fstamped_2eproto}, {}};

static void InitDefaultsscc_info_LoadPoseStamped_load_5fpose_5fstamped_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz_pose_plugin::_LoadPoseStamped_default_instance_;
    new (ptr) ::gz_pose_plugin::LoadPoseStamped();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz_pose_plugin::LoadPoseStamped::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LoadPoseStamped_load_5fpose_5fstamped_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_LoadPoseStamped_load_5fpose_5fstamped_2eproto}, {
      &scc_info_LoadHeader_load_5fpose_5fstamped_2eproto.base,
      &scc_info_LoadPose_load_5fpose_5fstamped_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_load_5fpose_5fstamped_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_load_5fpose_5fstamped_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_load_5fpose_5fstamped_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_load_5fpose_5fstamped_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader_LoadStamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader_LoadStamp, sec_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader_LoadStamp, nsec_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader, stamp_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadHeader, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Position, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Position, x_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Position, y_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Position, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Orientation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Orientation, w_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Orientation, x_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Orientation, y_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose_Orientation, z_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose, position_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPose, orientation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPoseStamped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPoseStamped, header_),
  PROTOBUF_FIELD_OFFSET(::gz_pose_plugin::LoadPoseStamped, pose_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz_pose_plugin::LoadHeader_LoadStamp)},
  { 7, 14, sizeof(::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse)},
  { 16, -1, sizeof(::gz_pose_plugin::LoadHeader)},
  { 23, -1, sizeof(::gz_pose_plugin::LoadPose_Position)},
  { 31, -1, sizeof(::gz_pose_plugin::LoadPose_Orientation)},
  { 40, -1, sizeof(::gz_pose_plugin::LoadPose)},
  { 47, -1, sizeof(::gz_pose_plugin::LoadPoseStamped)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gz_pose_plugin::_LoadHeader_LoadStamp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gz_pose_plugin::_LoadHeader_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gz_pose_plugin::_LoadHeader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gz_pose_plugin::_LoadPose_Position_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gz_pose_plugin::_LoadPose_Orientation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gz_pose_plugin::_LoadPose_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gz_pose_plugin::_LoadPoseStamped_default_instance_),
};

const char descriptor_table_protodef_load_5fpose_5fstamped_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027load_pose_stamped.proto\022\016gz_pose_plugi"
  "n\"\312\001\n\nLoadHeader\0223\n\005stamp\030\001 \001(\0132$.gz_pos"
  "e_plugin.LoadHeader.LoadStamp\0222\n\004data\030\002 "
  "\003(\0132$.gz_pose_plugin.LoadHeader.DataEntr"
  "y\032&\n\tLoadStamp\022\013\n\003sec\030\001 \001(\003\022\014\n\004nsec\030\002 \001("
  "\005\032+\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
  "(\t:\0028\001\"\342\001\n\010LoadPose\0223\n\010position\030\001 \001(\0132!."
  "gz_pose_plugin.LoadPose.Position\0229\n\013orie"
  "ntation\030\002 \001(\0132$.gz_pose_plugin.LoadPose."
  "Orientation\032+\n\010Position\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030"
  "\002 \001(\001\022\t\n\001z\030\003 \001(\001\0329\n\013Orientation\022\t\n\001w\030\001 \001"
  "(\001\022\t\n\001x\030\002 \001(\001\022\t\n\001y\030\003 \001(\001\022\t\n\001z\030\004 \001(\001\"e\n\017L"
  "oadPoseStamped\022*\n\006header\030\001 \001(\0132\032.gz_pose"
  "_plugin.LoadHeader\022&\n\004pose\030\002 \001(\0132\030.gz_po"
  "se_plugin.LoadPoseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_load_5fpose_5fstamped_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_load_5fpose_5fstamped_2eproto_sccs[7] = {
  &scc_info_LoadHeader_load_5fpose_5fstamped_2eproto.base,
  &scc_info_LoadHeader_DataEntry_DoNotUse_load_5fpose_5fstamped_2eproto.base,
  &scc_info_LoadHeader_LoadStamp_load_5fpose_5fstamped_2eproto.base,
  &scc_info_LoadPose_load_5fpose_5fstamped_2eproto.base,
  &scc_info_LoadPose_Orientation_load_5fpose_5fstamped_2eproto.base,
  &scc_info_LoadPose_Position_load_5fpose_5fstamped_2eproto.base,
  &scc_info_LoadPoseStamped_load_5fpose_5fstamped_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_load_5fpose_5fstamped_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_load_5fpose_5fstamped_2eproto = {
  false, false, descriptor_table_protodef_load_5fpose_5fstamped_2eproto, "load_pose_stamped.proto", 586,
  &descriptor_table_load_5fpose_5fstamped_2eproto_once, descriptor_table_load_5fpose_5fstamped_2eproto_sccs, descriptor_table_load_5fpose_5fstamped_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_load_5fpose_5fstamped_2eproto::offsets,
  file_level_metadata_load_5fpose_5fstamped_2eproto, 7, file_level_enum_descriptors_load_5fpose_5fstamped_2eproto, file_level_service_descriptors_load_5fpose_5fstamped_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_load_5fpose_5fstamped_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_load_5fpose_5fstamped_2eproto)), true);
namespace gz_pose_plugin {

// ===================================================================

void LoadHeader_LoadStamp::InitAsDefaultInstance() {
}
class LoadHeader_LoadStamp::_Internal {
 public:
};

LoadHeader_LoadStamp::LoadHeader_LoadStamp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gz_pose_plugin.LoadHeader.LoadStamp)
}
LoadHeader_LoadStamp::LoadHeader_LoadStamp(const LoadHeader_LoadStamp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&sec_, &from.sec_,
    static_cast<size_t>(reinterpret_cast<char*>(&nsec_) -
    reinterpret_cast<char*>(&sec_)) + sizeof(nsec_));
  // @@protoc_insertion_point(copy_constructor:gz_pose_plugin.LoadHeader.LoadStamp)
}

void LoadHeader_LoadStamp::SharedCtor() {
  ::memset(&sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsec_) -
      reinterpret_cast<char*>(&sec_)) + sizeof(nsec_));
}

LoadHeader_LoadStamp::~LoadHeader_LoadStamp() {
  // @@protoc_insertion_point(destructor:gz_pose_plugin.LoadHeader.LoadStamp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadHeader_LoadStamp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadHeader_LoadStamp::ArenaDtor(void* object) {
  LoadHeader_LoadStamp* _this = reinterpret_cast< LoadHeader_LoadStamp* >(object);
  (void)_this;
}
void LoadHeader_LoadStamp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadHeader_LoadStamp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadHeader_LoadStamp& LoadHeader_LoadStamp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadHeader_LoadStamp_load_5fpose_5fstamped_2eproto.base);
  return *internal_default_instance();
}


void LoadHeader_LoadStamp::Clear() {
// @@protoc_insertion_point(message_clear_start:gz_pose_plugin.LoadHeader.LoadStamp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nsec_) -
      reinterpret_cast<char*>(&sec_)) + sizeof(nsec_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadHeader_LoadStamp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 sec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 nsec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          nsec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadHeader_LoadStamp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gz_pose_plugin.LoadHeader.LoadStamp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 sec = 1;
  if (this->sec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_sec(), target);
  }

  // int32 nsec = 2;
  if (this->nsec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_nsec(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz_pose_plugin.LoadHeader.LoadStamp)
  return target;
}

size_t LoadHeader_LoadStamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz_pose_plugin.LoadHeader.LoadStamp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 sec = 1;
  if (this->sec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_sec());
  }

  // int32 nsec = 2;
  if (this->nsec() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nsec());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadHeader_LoadStamp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz_pose_plugin.LoadHeader.LoadStamp)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadHeader_LoadStamp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadHeader_LoadStamp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz_pose_plugin.LoadHeader.LoadStamp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz_pose_plugin.LoadHeader.LoadStamp)
    MergeFrom(*source);
  }
}

void LoadHeader_LoadStamp::MergeFrom(const LoadHeader_LoadStamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz_pose_plugin.LoadHeader.LoadStamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sec() != 0) {
    _internal_set_sec(from._internal_sec());
  }
  if (from.nsec() != 0) {
    _internal_set_nsec(from._internal_nsec());
  }
}

void LoadHeader_LoadStamp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz_pose_plugin.LoadHeader.LoadStamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadHeader_LoadStamp::CopyFrom(const LoadHeader_LoadStamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz_pose_plugin.LoadHeader.LoadStamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadHeader_LoadStamp::IsInitialized() const {
  return true;
}

void LoadHeader_LoadStamp::InternalSwap(LoadHeader_LoadStamp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadHeader_LoadStamp, nsec_)
      + sizeof(LoadHeader_LoadStamp::nsec_)
      - PROTOBUF_FIELD_OFFSET(LoadHeader_LoadStamp, sec_)>(
          reinterpret_cast<char*>(&sec_),
          reinterpret_cast<char*>(&other->sec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadHeader_LoadStamp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

LoadHeader_DataEntry_DoNotUse::LoadHeader_DataEntry_DoNotUse() {}
LoadHeader_DataEntry_DoNotUse::LoadHeader_DataEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void LoadHeader_DataEntry_DoNotUse::MergeFrom(const LoadHeader_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata LoadHeader_DataEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void LoadHeader_DataEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void LoadHeader::InitAsDefaultInstance() {
  ::gz_pose_plugin::_LoadHeader_default_instance_._instance.get_mutable()->stamp_ = const_cast< ::gz_pose_plugin::LoadHeader_LoadStamp*>(
      ::gz_pose_plugin::LoadHeader_LoadStamp::internal_default_instance());
}
class LoadHeader::_Internal {
 public:
  static const ::gz_pose_plugin::LoadHeader_LoadStamp& stamp(const LoadHeader* msg);
};

const ::gz_pose_plugin::LoadHeader_LoadStamp&
LoadHeader::_Internal::stamp(const LoadHeader* msg) {
  return *msg->stamp_;
}
LoadHeader::LoadHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gz_pose_plugin.LoadHeader)
}
LoadHeader::LoadHeader(const LoadHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  if (from._internal_has_stamp()) {
    stamp_ = new ::gz_pose_plugin::LoadHeader_LoadStamp(*from.stamp_);
  } else {
    stamp_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gz_pose_plugin.LoadHeader)
}

void LoadHeader::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadHeader_load_5fpose_5fstamped_2eproto.base);
  stamp_ = nullptr;
}

LoadHeader::~LoadHeader() {
  // @@protoc_insertion_point(destructor:gz_pose_plugin.LoadHeader)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete stamp_;
}

void LoadHeader::ArenaDtor(void* object) {
  LoadHeader* _this = reinterpret_cast< LoadHeader* >(object);
  (void)_this;
}
void LoadHeader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadHeader& LoadHeader::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadHeader_load_5fpose_5fstamped_2eproto.base);
  return *internal_default_instance();
}


void LoadHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:gz_pose_plugin.LoadHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  if (GetArena() == nullptr && stamp_ != nullptr) {
    delete stamp_;
  }
  stamp_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadHeader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gz_pose_plugin.LoadHeader.LoadStamp stamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stamp(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&data_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadHeader::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gz_pose_plugin.LoadHeader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz_pose_plugin.LoadHeader.LoadStamp stamp = 1;
  if (this->has_stamp()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::stamp(this), target, stream);
  }

  // map<string, string> data = 2;
  if (!this->_internal_data().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "gz_pose_plugin.LoadHeader.DataEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "gz_pose_plugin.LoadHeader.DataEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_data().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = LoadHeader_DataEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_data().begin();
          it != this->_internal_data().end(); ++it) {
        target = LoadHeader_DataEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz_pose_plugin.LoadHeader)
  return target;
}

size_t LoadHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz_pose_plugin.LoadHeader)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> data = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_data_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_data().begin();
      it != this->_internal_data().end(); ++it) {
    total_size += LoadHeader_DataEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .gz_pose_plugin.LoadHeader.LoadStamp stamp = 1;
  if (this->has_stamp()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *stamp_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadHeader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz_pose_plugin.LoadHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadHeader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadHeader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz_pose_plugin.LoadHeader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz_pose_plugin.LoadHeader)
    MergeFrom(*source);
  }
}

void LoadHeader::MergeFrom(const LoadHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz_pose_plugin.LoadHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.has_stamp()) {
    _internal_mutable_stamp()->::gz_pose_plugin::LoadHeader_LoadStamp::MergeFrom(from._internal_stamp());
  }
}

void LoadHeader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz_pose_plugin.LoadHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadHeader::CopyFrom(const LoadHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz_pose_plugin.LoadHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadHeader::IsInitialized() const {
  return true;
}

void LoadHeader::InternalSwap(LoadHeader* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_);
  swap(stamp_, other->stamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadHeader::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadPose_Position::InitAsDefaultInstance() {
}
class LoadPose_Position::_Internal {
 public:
};

LoadPose_Position::LoadPose_Position(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gz_pose_plugin.LoadPose.Position)
}
LoadPose_Position::LoadPose_Position(const LoadPose_Position& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:gz_pose_plugin.LoadPose.Position)
}

void LoadPose_Position::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

LoadPose_Position::~LoadPose_Position() {
  // @@protoc_insertion_point(destructor:gz_pose_plugin.LoadPose.Position)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadPose_Position::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadPose_Position::ArenaDtor(void* object) {
  LoadPose_Position* _this = reinterpret_cast< LoadPose_Position* >(object);
  (void)_this;
}
void LoadPose_Position::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadPose_Position::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadPose_Position& LoadPose_Position::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadPose_Position_load_5fpose_5fstamped_2eproto.base);
  return *internal_default_instance();
}


void LoadPose_Position::Clear() {
// @@protoc_insertion_point(message_clear_start:gz_pose_plugin.LoadPose.Position)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadPose_Position::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadPose_Position::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gz_pose_plugin.LoadPose.Position)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz_pose_plugin.LoadPose.Position)
  return target;
}

size_t LoadPose_Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz_pose_plugin.LoadPose.Position)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double x = 1;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadPose_Position::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz_pose_plugin.LoadPose.Position)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPose_Position* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadPose_Position>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz_pose_plugin.LoadPose.Position)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz_pose_plugin.LoadPose.Position)
    MergeFrom(*source);
  }
}

void LoadPose_Position::MergeFrom(const LoadPose_Position& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz_pose_plugin.LoadPose.Position)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void LoadPose_Position::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz_pose_plugin.LoadPose.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPose_Position::CopyFrom(const LoadPose_Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz_pose_plugin.LoadPose.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPose_Position::IsInitialized() const {
  return true;
}

void LoadPose_Position::InternalSwap(LoadPose_Position* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadPose_Position, z_)
      + sizeof(LoadPose_Position::z_)
      - PROTOBUF_FIELD_OFFSET(LoadPose_Position, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadPose_Position::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadPose_Orientation::InitAsDefaultInstance() {
}
class LoadPose_Orientation::_Internal {
 public:
};

LoadPose_Orientation::LoadPose_Orientation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gz_pose_plugin.LoadPose.Orientation)
}
LoadPose_Orientation::LoadPose_Orientation(const LoadPose_Orientation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&w_, &from.w_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&w_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:gz_pose_plugin.LoadPose.Orientation)
}

void LoadPose_Orientation::SharedCtor() {
  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
}

LoadPose_Orientation::~LoadPose_Orientation() {
  // @@protoc_insertion_point(destructor:gz_pose_plugin.LoadPose.Orientation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadPose_Orientation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LoadPose_Orientation::ArenaDtor(void* object) {
  LoadPose_Orientation* _this = reinterpret_cast< LoadPose_Orientation* >(object);
  (void)_this;
}
void LoadPose_Orientation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadPose_Orientation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadPose_Orientation& LoadPose_Orientation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadPose_Orientation_load_5fpose_5fstamped_2eproto.base);
  return *internal_default_instance();
}


void LoadPose_Orientation::Clear() {
// @@protoc_insertion_point(message_clear_start:gz_pose_plugin.LoadPose.Orientation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&w_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&w_)) + sizeof(z_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadPose_Orientation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          w_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double x = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double y = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double z = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadPose_Orientation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gz_pose_plugin.LoadPose.Orientation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double w = 1;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_w(), target);
  }

  // double x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_x(), target);
  }

  // double y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_y(), target);
  }

  // double z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz_pose_plugin.LoadPose.Orientation)
  return target;
}

size_t LoadPose_Orientation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz_pose_plugin.LoadPose.Orientation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double w = 1;
  if (!(this->w() <= 0 && this->w() >= 0)) {
    total_size += 1 + 8;
  }

  // double x = 2;
  if (!(this->x() <= 0 && this->x() >= 0)) {
    total_size += 1 + 8;
  }

  // double y = 3;
  if (!(this->y() <= 0 && this->y() >= 0)) {
    total_size += 1 + 8;
  }

  // double z = 4;
  if (!(this->z() <= 0 && this->z() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadPose_Orientation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz_pose_plugin.LoadPose.Orientation)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPose_Orientation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadPose_Orientation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz_pose_plugin.LoadPose.Orientation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz_pose_plugin.LoadPose.Orientation)
    MergeFrom(*source);
  }
}

void LoadPose_Orientation::MergeFrom(const LoadPose_Orientation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz_pose_plugin.LoadPose.Orientation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.w() <= 0 && from.w() >= 0)) {
    _internal_set_w(from._internal_w());
  }
  if (!(from.x() <= 0 && from.x() >= 0)) {
    _internal_set_x(from._internal_x());
  }
  if (!(from.y() <= 0 && from.y() >= 0)) {
    _internal_set_y(from._internal_y());
  }
  if (!(from.z() <= 0 && from.z() >= 0)) {
    _internal_set_z(from._internal_z());
  }
}

void LoadPose_Orientation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz_pose_plugin.LoadPose.Orientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPose_Orientation::CopyFrom(const LoadPose_Orientation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz_pose_plugin.LoadPose.Orientation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPose_Orientation::IsInitialized() const {
  return true;
}

void LoadPose_Orientation::InternalSwap(LoadPose_Orientation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadPose_Orientation, z_)
      + sizeof(LoadPose_Orientation::z_)
      - PROTOBUF_FIELD_OFFSET(LoadPose_Orientation, w_)>(
          reinterpret_cast<char*>(&w_),
          reinterpret_cast<char*>(&other->w_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadPose_Orientation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadPose::InitAsDefaultInstance() {
  ::gz_pose_plugin::_LoadPose_default_instance_._instance.get_mutable()->position_ = const_cast< ::gz_pose_plugin::LoadPose_Position*>(
      ::gz_pose_plugin::LoadPose_Position::internal_default_instance());
  ::gz_pose_plugin::_LoadPose_default_instance_._instance.get_mutable()->orientation_ = const_cast< ::gz_pose_plugin::LoadPose_Orientation*>(
      ::gz_pose_plugin::LoadPose_Orientation::internal_default_instance());
}
class LoadPose::_Internal {
 public:
  static const ::gz_pose_plugin::LoadPose_Position& position(const LoadPose* msg);
  static const ::gz_pose_plugin::LoadPose_Orientation& orientation(const LoadPose* msg);
};

const ::gz_pose_plugin::LoadPose_Position&
LoadPose::_Internal::position(const LoadPose* msg) {
  return *msg->position_;
}
const ::gz_pose_plugin::LoadPose_Orientation&
LoadPose::_Internal::orientation(const LoadPose* msg) {
  return *msg->orientation_;
}
LoadPose::LoadPose(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gz_pose_plugin.LoadPose)
}
LoadPose::LoadPose(const LoadPose& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::gz_pose_plugin::LoadPose_Position(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_orientation()) {
    orientation_ = new ::gz_pose_plugin::LoadPose_Orientation(*from.orientation_);
  } else {
    orientation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gz_pose_plugin.LoadPose)
}

void LoadPose::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadPose_load_5fpose_5fstamped_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&orientation_) -
      reinterpret_cast<char*>(&position_)) + sizeof(orientation_));
}

LoadPose::~LoadPose() {
  // @@protoc_insertion_point(destructor:gz_pose_plugin.LoadPose)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadPose::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete orientation_;
}

void LoadPose::ArenaDtor(void* object) {
  LoadPose* _this = reinterpret_cast< LoadPose* >(object);
  (void)_this;
}
void LoadPose::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadPose::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadPose& LoadPose::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadPose_load_5fpose_5fstamped_2eproto.base);
  return *internal_default_instance();
}


void LoadPose::Clear() {
// @@protoc_insertion_point(message_clear_start:gz_pose_plugin.LoadPose)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArena() == nullptr && orientation_ != nullptr) {
    delete orientation_;
  }
  orientation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadPose::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gz_pose_plugin.LoadPose.Position position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gz_pose_plugin.LoadPose.Orientation orientation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_orientation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadPose::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gz_pose_plugin.LoadPose)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz_pose_plugin.LoadPose.Position position = 1;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::position(this), target, stream);
  }

  // .gz_pose_plugin.LoadPose.Orientation orientation = 2;
  if (this->has_orientation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::orientation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz_pose_plugin.LoadPose)
  return target;
}

size_t LoadPose::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz_pose_plugin.LoadPose)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gz_pose_plugin.LoadPose.Position position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .gz_pose_plugin.LoadPose.Orientation orientation = 2;
  if (this->has_orientation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *orientation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadPose::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz_pose_plugin.LoadPose)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPose* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadPose>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz_pose_plugin.LoadPose)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz_pose_plugin.LoadPose)
    MergeFrom(*source);
  }
}

void LoadPose::MergeFrom(const LoadPose& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz_pose_plugin.LoadPose)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::gz_pose_plugin::LoadPose_Position::MergeFrom(from._internal_position());
  }
  if (from.has_orientation()) {
    _internal_mutable_orientation()->::gz_pose_plugin::LoadPose_Orientation::MergeFrom(from._internal_orientation());
  }
}

void LoadPose::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz_pose_plugin.LoadPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPose::CopyFrom(const LoadPose& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz_pose_plugin.LoadPose)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPose::IsInitialized() const {
  return true;
}

void LoadPose::InternalSwap(LoadPose* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadPose, orientation_)
      + sizeof(LoadPose::orientation_)
      - PROTOBUF_FIELD_OFFSET(LoadPose, position_)>(
          reinterpret_cast<char*>(&position_),
          reinterpret_cast<char*>(&other->position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadPose::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadPoseStamped::InitAsDefaultInstance() {
  ::gz_pose_plugin::_LoadPoseStamped_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz_pose_plugin::LoadHeader*>(
      ::gz_pose_plugin::LoadHeader::internal_default_instance());
  ::gz_pose_plugin::_LoadPoseStamped_default_instance_._instance.get_mutable()->pose_ = const_cast< ::gz_pose_plugin::LoadPose*>(
      ::gz_pose_plugin::LoadPose::internal_default_instance());
}
class LoadPoseStamped::_Internal {
 public:
  static const ::gz_pose_plugin::LoadHeader& header(const LoadPoseStamped* msg);
  static const ::gz_pose_plugin::LoadPose& pose(const LoadPoseStamped* msg);
};

const ::gz_pose_plugin::LoadHeader&
LoadPoseStamped::_Internal::header(const LoadPoseStamped* msg) {
  return *msg->header_;
}
const ::gz_pose_plugin::LoadPose&
LoadPoseStamped::_Internal::pose(const LoadPoseStamped* msg) {
  return *msg->pose_;
}
LoadPoseStamped::LoadPoseStamped(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gz_pose_plugin.LoadPoseStamped)
}
LoadPoseStamped::LoadPoseStamped(const LoadPoseStamped& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gz_pose_plugin::LoadHeader(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_pose()) {
    pose_ = new ::gz_pose_plugin::LoadPose(*from.pose_);
  } else {
    pose_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gz_pose_plugin.LoadPoseStamped)
}

void LoadPoseStamped::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadPoseStamped_load_5fpose_5fstamped_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pose_) -
      reinterpret_cast<char*>(&header_)) + sizeof(pose_));
}

LoadPoseStamped::~LoadPoseStamped() {
  // @@protoc_insertion_point(destructor:gz_pose_plugin.LoadPoseStamped)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LoadPoseStamped::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete pose_;
}

void LoadPoseStamped::ArenaDtor(void* object) {
  LoadPoseStamped* _this = reinterpret_cast< LoadPoseStamped* >(object);
  (void)_this;
}
void LoadPoseStamped::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadPoseStamped::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadPoseStamped& LoadPoseStamped::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadPoseStamped_load_5fpose_5fstamped_2eproto.base);
  return *internal_default_instance();
}


void LoadPoseStamped::Clear() {
// @@protoc_insertion_point(message_clear_start:gz_pose_plugin.LoadPoseStamped)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && pose_ != nullptr) {
    delete pose_;
  }
  pose_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadPoseStamped::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gz_pose_plugin.LoadHeader header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gz_pose_plugin.LoadPose pose = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pose(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadPoseStamped::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gz_pose_plugin.LoadPoseStamped)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz_pose_plugin.LoadHeader header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .gz_pose_plugin.LoadPose pose = 2;
  if (this->has_pose()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::pose(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz_pose_plugin.LoadPoseStamped)
  return target;
}

size_t LoadPoseStamped::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz_pose_plugin.LoadPoseStamped)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gz_pose_plugin.LoadHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gz_pose_plugin.LoadPose pose = 2;
  if (this->has_pose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadPoseStamped::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz_pose_plugin.LoadPoseStamped)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadPoseStamped* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadPoseStamped>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz_pose_plugin.LoadPoseStamped)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz_pose_plugin.LoadPoseStamped)
    MergeFrom(*source);
  }
}

void LoadPoseStamped::MergeFrom(const LoadPoseStamped& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz_pose_plugin.LoadPoseStamped)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::gz_pose_plugin::LoadHeader::MergeFrom(from._internal_header());
  }
  if (from.has_pose()) {
    _internal_mutable_pose()->::gz_pose_plugin::LoadPose::MergeFrom(from._internal_pose());
  }
}

void LoadPoseStamped::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz_pose_plugin.LoadPoseStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadPoseStamped::CopyFrom(const LoadPoseStamped& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz_pose_plugin.LoadPoseStamped)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadPoseStamped::IsInitialized() const {
  return true;
}

void LoadPoseStamped::InternalSwap(LoadPoseStamped* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadPoseStamped, pose_)
      + sizeof(LoadPoseStamped::pose_)
      - PROTOBUF_FIELD_OFFSET(LoadPoseStamped, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadPoseStamped::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gz_pose_plugin
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gz_pose_plugin::LoadHeader_LoadStamp* Arena::CreateMaybeMessage< ::gz_pose_plugin::LoadHeader_LoadStamp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gz_pose_plugin::LoadHeader_LoadStamp >(arena);
}
template<> PROTOBUF_NOINLINE ::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gz_pose_plugin::LoadHeader_DataEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::gz_pose_plugin::LoadHeader* Arena::CreateMaybeMessage< ::gz_pose_plugin::LoadHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gz_pose_plugin::LoadHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::gz_pose_plugin::LoadPose_Position* Arena::CreateMaybeMessage< ::gz_pose_plugin::LoadPose_Position >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gz_pose_plugin::LoadPose_Position >(arena);
}
template<> PROTOBUF_NOINLINE ::gz_pose_plugin::LoadPose_Orientation* Arena::CreateMaybeMessage< ::gz_pose_plugin::LoadPose_Orientation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gz_pose_plugin::LoadPose_Orientation >(arena);
}
template<> PROTOBUF_NOINLINE ::gz_pose_plugin::LoadPose* Arena::CreateMaybeMessage< ::gz_pose_plugin::LoadPose >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gz_pose_plugin::LoadPose >(arena);
}
template<> PROTOBUF_NOINLINE ::gz_pose_plugin::LoadPoseStamped* Arena::CreateMaybeMessage< ::gz_pose_plugin::LoadPoseStamped >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gz_pose_plugin::LoadPoseStamped >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
